Todo before real release:
-Object constructors (all types), change physicsType arg to physicsBodyType)
-Filter out lights that are too far in frag shader
-Fix uninitialized read with textured object in misc/FunctionVisualizer/resources/mainBUGGED.lua
-Add to Utils(?) a function to convert from pixels to meters for Lua
-Render to texture, so we can have some awesome effects!
-Don't make uniforms obligatory

- Fix subtle fish-eye effect (FOV math, obvious when looking at a cube)
- Use a proper bmp loader since with some .bmp files, the texture will be offset when mapped.

-Switch to deferred rendering, my shaded shader sucks right now way too much

-Fix weird crash on Windows that happens sometimes. It happens a few seconds after you quit. I think it is the same bug as below (game stays alive for a while after quitting) and I think it is due to the fact I am forgetting to quit cleanly a certain .dll.
-- Only happens when we load resources? Only happens when the game has been running for at least a few seconds?
-- Maybe a VisualStudio problem? It happened with a completely different project...
-- Did I fix it by calling SDL_GL_DeleteContext(mMainContext) when quitting?

-To make it faster, use delta instead of multiple steps per frame? Or nah?
-Give us a way to check if it is the first step of a frame in lua gameStep().

-Definitely try to make it faster CPU wise. When there are a lot of verticies, it slows down A LOT CPU side!

- Add a timer in Lua!

- Have a renderAllDebugShapesWithCoords() to relieve the work load from Lua (and usless redraws!)
-Sometimes stays alive for a few seconds (like 10) after quitting?
-In PhysicsBody, render debug shapes at the center of the objects themselves instead of relative to object geometry?

-Ability to create camera with/without physics?
-Give Lua access to gravity and have projection instead of hardcoded coords for 2D physics?
-Have setType() and getType() in PhysicsBody so we can change the type?

-Write a template container and keep those instances instead of a bunch of maps in ResourceManager. Add the ability to duplicate resources in this container!

-Make physics faster by having less steps per frame?

-Work on CMake lists to make adding libraries easier and other things.
-When a C++ error happens (that is caught), crash() it with the Lua line (when it is called from Lua)!
-Give Lua access to input events?

- Use .mtl material files (with ObjectGeometry, check out addObjectGeometryGroup())
->>> .mtl can specify textures!


-3d animations: Going with mesh keyframes fro now: blender! Export in one .obj per animation. Then interpolate the meshes.
------------------------------------
-Do something with v-sync like that the frame rate doesn't drop to 30?

-Support events for input

------------------------------------

-Advanced tutorials:
-2D Text (+2d textures)

- Transparency

-Dynamic shadows (static shadows are made in 3d modeling program)
